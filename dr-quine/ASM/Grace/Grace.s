; nasm -g -F dwarf -felf64 Grace.s ; gcc -static -g -o Grace Grace.o
%define OPEN_CALL 2
%define CLOSE_CALL 60
%define RDWR_CALL 0666o
%macro macro_main 0
global main
extern dprintf

section .rodata
filename db "Grace_kid.s", 0
string db "; nasm -g -F dwarf -felf64 Grace.s ; gcc -static -g -o Grace Grace.o%1$c%%define OPEN_CALL 2%1$c%%define CLOSE_CALL 60%1$c%%define RDWR_CALL 0666o%1$c%%macro macro_main 0%1$cglobal main%1$cextern dprintf%1$c%1$csection .rodata%1$cfilename db %2$cGrace_kid.s%2$c, 0%1$cstring db %2$c%4$s%2$c, 0%1$c%1$csection .text%1$cmain:%1$c%3$cmov rdi, filename%1$c%3$cmov rsi, 0102o%1$c%3$cmov rdx, RDWR_CALL%1$c%3$cmov rax, OPEN_CALL%1$c%3$csyscall%1$c%1$c%3$cmov rdi, rax%1$c%3$clea rsi, [rel string]%1$c%3$cmov rdx, 10%1$c%3$cmov rcx, 34%1$c%3$cmov r8, 9%1$c%3$clea r9, [rel string]%1$c%3$cxor rax, rax%1$c%3$ccall	dprintf%1$c%1$c%3$cmov rax, CLOSE_CALL%1$c%3$csyscall%1$c%3$cret%1$c%%endmacro%1$c%1$cmacro_main%1$c", 0

section .text
main:
	mov rdi, filename
	mov rsi, 0102o
	mov rdx, RDWR_CALL
	mov rax, OPEN_CALL
	syscall

	mov rdi, rax
	lea rsi, [rel string]
	mov rdx, 10
	mov rcx, 34
	mov r8, 9
	lea r9, [rel string]
	xor rax, rax
	call	dprintf

	mov rax, CLOSE_CALL
	syscall
	ret
%endmacro

macro_main
